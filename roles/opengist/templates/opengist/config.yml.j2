#jinja2: trim_blocks: True, lstrip_blocks: True
{% set values = opengist_config | bodsch.core.remove_empty_values %}
---
# {{ ansible_managed }}

{% if values.log_level is defined and
      values.log_level in ['debug', 'info', 'warn', 'error', 'fatal'] %}
log-level: {{ values.log_level }}
{% endif %}
{% if values.log_output is defined and
      values.log_output | bodsch.core.compare_list(['stdout','file']) %}
log-output: {{ values.log_output | join(',') }}
{% endif %}
{% if values.external_url | default("") | string | length > 0 %}
external-url: {{ values.external_url }}
{% endif %}
{% if values.opengist_home | default("") | string | length > 0 %}
opengist-home: {{ values.opengist_home }}
{% endif %}
{% if values.secrect_key | default("") | string | length > 0 %}
secret-key: {{ values.secrect_key }}
{% endif %}
{% if values.db_uri | default("") | string | length > 0 %}
db-uri: {{ values.db_uri }}
{% endif %}
{% if values.index.type is defined and
      (values.index.type in ['bleve','meilisearch'] or
      values.index.type | string | length == 0) %}

index: {{ values.index.type }}
{% endif %}
{% if values.index.meili is defined %}

  {% if values.index.meili.host | default("") | string | length > 0 %}
index.meili.host: {{ values.index.meili.host }}
  {% endif %}
  {% if values.index.meili.api_key | default("") | string | length > 0 %}
index.meili.api-key: {{ values.index.meili.api_key }}
  {% endif %}
{% endif %}
{% if values.git is defined %}

  {% if values.git.default_branch | default("") | string | length > 0 %}
git.default-branch: {{ values.git.default_branch }}
  {% endif %}
{% endif %}
{% if values.sqlite is defined %}

  {% if values.sqlite.default_branch is defined and values.sqlite.default_branch | default("WAL") | string | length > 0 %}
sqlite.journal-mode: {{ values.sqlite.default_branch }}
  {% endif %}
{% endif %}
{% if values.http is defined %}

http.git-enabled: {{ values.http.git_enabled | default('false') | bool | lower }}
  {% if values.http.git_enabled | default('false') | bool %}
    {% if values.http.host is defined and values.http.host | default("") | string | length > 0 %}
http.host: {{ values.http.host }}
    {% endif %}
    {% if values.http.port is defined and values.http.port | default("") | string | length > 0 %}
http.port: {{ values.http.port }}
    {% endif %}
  {% endif %}
{% endif %}
{% if values.unix_socket_pemissions is defined and values.unix_socket_pemissions | default("WAL") | string | length > 0 %}

unix-socket-permissions: {{ values.unix_socket_pemissions }}
{% endif %}
{% if values.metrics is defined %}

  {% if values.metrics.enabled is defined and values.metrics.enabled | default("") | string | length > 0 %}
metrics.enabled: {{ values.metrics.enabled | lower }}
  {% endif %}
{% endif %}
{% if values.ssh is defined %}

ssh.git-enabled: {{ values.ssh.git_enabled | default('false') | bool | lower }}
  {% if values.ssh.git_enabled | default('false') | bool %}
    {% if values.ssh.host is defined and values.ssh.host | default("") | string | length > 0 %}
ssh.host: {{ values.ssh.host }}
    {% endif %}
    {% if values.ssh.port is defined and values.ssh.port | default("") | string | length > 0 %}
ssh.port: {{ values.ssh.port }}
    {% endif %}
    {% if values.ssh.external_domain is defined and values.ssh.external_domain | default("") | string | length > 0 %}
ssh.external-domain: {{ values.ssh.external_domain }}
    {% endif %}
    {% if values.ssh.keygen_executable is defined and values.ssh.keygen_executable | default("") | string | length > 0 %}
ssh.keygen-executable: {{ values.ssh.keygen_executable }}
    {% endif %}
  {% endif %}
{% endif %}
{% if values.github is defined %}

  {% if values.github.client_key is defined and values.github.client_key | default("") | string | length > 0 %}
github.client-key: {{ values.github.client_key }}
  {% endif %}
  {% if values.github.secret is defined and values.github.secret | default("") | string | length > 0 %}
github.secret: {{ values.github.secret }}
  {% endif %}
{% endif %}
{% if values.gitlab is defined %}

  {% if values.gitlab.client_key is defined and values.gitlab.client_key | default("") | string | length > 0 %}
gitlab.client-key: {{ values.gitlab.client_key }}
  {% endif %}
  {% if values.gitlab.secret is defined and values.gitlab.secret | default("") | string | length > 0 %}
gitlab.secret: {{ values.gitlab.secret }}
  {% endif %}
  {% if values.gitlab.url is defined and values.gitlab.url | default("") | string | length > 0 %}
gitlab.url: {{ values.gitlab.url }}
  {% endif %}
  {% if values.gitlab.name is defined and values.gitlab.name | default("") | string | length > 0 %}
gitlab.name: {{ values.gitlab.name }}
  {% endif %}
{% endif %}
{% if values.gitea is defined %}

  {% if values.gitea.client_key is defined and values.gitea.client_key | default("") | string | length > 0 %}
gitea.client-key: {{ values.gitea.client_key }}
  {% endif %}
  {% if values.gitea.secret is defined and values.gitea.secret | default("") | string | length > 0 %}
gitea.secret: {{ values.gitea.secret }}
  {% endif %}
  {% if values.gitea.url is defined and values.gitea.url | default("") | string | length > 0 %}
gitea.url: {{ values.gitea.url }}
  {% endif %}
  {% if values.gitea.name is defined and values.gitea.name | default("") | string | length > 0 %}
gitea.name: {{ values.gitea.name }}
  {% endif %}
{% endif %}
{% if values.oidc is defined %}

  {% if values.oidc.provider_name is defined and values.oidc.provider_name | default("") | string | length > 0 %}
oidc.provider-name: {{ values.oidc.provider_name }}
  {% endif %}
  {% if values.oidc.client_key is defined and values.oidc.client_key | default("") | string | length > 0 %}
oidc.client-key: {{ values.oidc.client_key }}
  {% endif %}
  {% if values.oidc.secret is defined and values.oidc.secret | default("") | string | length > 0 %}
oidc.secret: {{ values.oidc.secret }}
  {% endif %}
  {% if values.oidc.discovery_url is defined and values.oidc.discovery_url | default("") | string | length > 0 %}
oidc.discovery-url: {{ values.oidc.discovery_url }}
  {% endif %}
  {% if values.oidc.group_claim_name is defined and values.oidc.group_claim_name | default("") | string | length > 0 %}
oidc.group-claim-name: {{ values.oidc.group_claim_name }}
  {% endif %}
  {% if values.oidc.admin_group is defined and values.oidc.admin_group | default("") | string | length > 0 %}
oidc.admin-group: {{ values.oidc.admin_group }}
  {% endif %}
{% endif %}
{% if values.ldap is defined %}

  {% if values.ldap.url is defined and values.ldap.url | default("") | string | length > 0 %}
ldap.url: {{ values.ldap.url }}
  {% endif %}
  {% if values.ldap.bind_dn is defined and values.ldap.bind_dn | default("") | string | length > 0 %}
ldap.bind-dn: {{ values.ldap.bind_dn }}
  {% endif %}
  {% if values.ldap.bind_credentials is defined and values.ldap.bind_credentials | default("") | string | length > 0 %}
ldap.bind-credentials: {{ values.ldap.bind_credentials }}
  {% endif %}
  {% if values.ldap.search_base is defined and values.ldap.search_base | default("") | string | length > 0 %}
ldap.search-base: {{ values.ldap.search_base }}
  {% endif %}
  {% if values.ldap.search_filter is defined and values.ldap.search_filter | default("") | string | length > 0 %}
ldap.search-filter: {{ values.ldap.search_filter }}
  {% endif %}
{% endif %}
{% if values.custom is defined %}

  {% if values.custom.name is defined and values.custom.name | default("") | string | length > 0 %}
custom.name: {{ values.custom.name }}
  {% endif %}
  {% if values.custom.logo is defined and values.custom.logo | default("") | string | length > 0 %}
custom.logo: {{ values.custom.logo }}
  {% endif %}
  {% if values.custom.favicon is defined and values.custom.favicon | default("") | string | length > 0 %}
custom.favicon: {{ values.custom.favicon }}
  {% endif %}

  {% if values.custom.static_links is defined and values.custom.static_links | default([]) | count > 0 %}
custom.static-links:
    {% for links in values.custom.static_links %}
  - name: {{ links.name | default("") }}
    path: {{ links.path | default("") }}
    {% endfor %}
  {% endif %}
{% endif %}
{#
# Learn more about Opengist configuration here:
# https://github.com/thomiceli/opengist/blob/master/docs/configuration/configure.md
# https://github.com/thomiceli/opengist/blob/master/docs/configuration/cheat-sheet.md

# Set the log level to one of the following: debug, info, warn, error, fatal. Default: warn
log-level: warn

# Set the log output to one or more of the following: `stdout`, `file`. Default: stdout,file
log-output: stdout,file

# Public URL to access to Opengist
external-url:

# Directory where Opengist will store its data. Default: ~/.opengist/
opengist-home:

# Secret key used for session store & encrypt MFA data on database. Default: <randomized 32 bytes>
secret-key:

# URI of the database. Default: opengist.db (SQLite) is placed in opengist-home
# SQLite:        file:/path/to/database
# PostgreSQL:    postgres://user:password@host:port/database
# MySQL/MariaDB: mysql://user:password@host:port/database
db-uri: opengist.db

# Define the code indexer (either `bleve`, `meilisearch`, or empty for no index). Default: bleve
index: bleve

# Set the host for the Meiliseach server
index.meili.host:

# Set the API key for the Meiliseach server
index.meili.api-key:

# Default branch name used by Opengist when initializing Git repositories.
# If not set, uses the Git default branch name. See https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup#_new_default_branch
git.default-branch:

# Set the journal mode for SQLite. Default: WAL
# See https://www.sqlite.org/pragma.html#pragma_journal_mode
# For SQLite databases only.
sqlite.journal-mode: WAL

# HTTP server configuration
# Host to bind to. Default: 0.0.0.0
# Use an IP address for network binding. Use a path for Unix socket binding (e.g. /run/opengist.sock)
http.host: 0.0.0.0

# Port to bind to. Default: 6157
http.port: 6157

# Enable or disable git operations (clone, pull, push) via HTTP (either `true` or `false`). Default: true
http.git-enabled: true

# File permissions for Unix socket (octal format). Default: 0666
unix-socket-permissions: 0666

# Enable or disable the metrics endpoint (either `true` or `false`). Default: false
metrics.enabled: false

# SSH built-in server configuration
# Note: it is not using the SSH daemon from your machine (yet)

# Enable or disable SSH built-in server
# for git operations (clone, pull, push) via SSH (either `true` or `false`). Default: true
ssh.git-enabled: true

# Host to bind to. Default: 0.0.0.0
ssh.host: 0.0.0.0

# Port to bind to. Default: 2222
# Note: it cannot be the same port as the SSH daemon if it's currently running
# If you want to use the port 22 for the built-in SSH server,
# you can either change the port of the SSH daemon or stop it
ssh.port: 2222

# Public domain for the Git SSH connection, if it has to be different from the HTTP one.
# If not set, uses the URL from the request
ssh.external-domain:

# Path or alias to ssh-keygen executable. Default: ssh-keygen
ssh.keygen-executable: ssh-keygen

# OAuth2 configuration
# The callback/redirect URL must be http://opengist.url/oauth/<github|gitlab|gitea|openid-connect>/callback

# To create a new OAuth2 application using GitHub : https://github.com/settings/applications/new
github.client-key:
github.secret:

# To create a new OAuth2 application using Gitlab : https://gitlab.com/-/user_settings/applications
gitlab.client-key:
gitlab.secret:
# URL of the Gitlab instance. Default: https://gitlab.com/
gitlab.url: https://gitlab.com/
# The name of the GitLab instance. It is displayed in the OAuth login button. Default: GitLab
gitlab.name: GitLab

# To create a new OAuth2 application using Gitea : https://gitea.domain/user/settings/applications
gitea.client-key:
gitea.secret:
# URL of the Gitea instance. Default: https://gitea.com/
gitea.url: https://gitea.com/
# The name of the Gitea instance. It is displayed in the OAuth login button. Default: Gitea
gitea.name: Gitea

# To create a new OAuth2 application using OpenID Connect:
oidc.provider-name:
oidc.client-key:
oidc.secret:
# Discovery endpoint of the OpenID provider. Generally something like http://auth.example.com/.well-known/openid-configuration
oidc.discovery-url:
# The name of the claim containing the groups
oidc.group-claim-name:
# The name of the group that should receive admin rights
oidc.admin-group:

# LDAP authentication configuration
# URL of the LDAP instance e.g: ldap://ldap.example.com:389 ; if not set, LDAP authentication is disabled
ldap.url:
# Bind DN to authenticate against the LDAP e.g: cn=read-only-admin,dc=example,dc=com
ldap.bind-dn:
# The password for the Bind DN.
ldap.bind-credentials:
# The Base DN to start search from e.g: ou=People,dc=example,dc=com
ldap.search-base:
# The filter to search against (the format string %s will be replaced with the username) e.g: (uid=%s)
ldap.search-filter:

# Instance name
# Set your own custom name to be displayed instead of 'Opengist'
custom.name:

# Custom assets
# Add your own custom assets, that are files relatives to $opengist-home/custom/
custom.logo:
custom.favicon:

# Static pages in footer (like legal notices, privacy policy, etc.)
# The path can be a URL or a relative path to a file in the $opengist-home/custom/ directory
custom.static-links:
#  - name: Gitea
#    path: https://gitea.com
#  - name: Legal notices
#    path: legal.html
#}
