---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        # artixlinux
        - "{{ ansible_os_family | lower | replace(' ', '') }}.yml"
        - default.yaml
      skip: true

- name: detect ansible check_mode
  bodsch.core.check_mode:
  register: _check_mode

- name: define running_in_check_mode
  ansible.builtin.set_fact:
    running_in_check_mode: '{{ _check_mode.check_mode }}'

- name: install dependency
  ansible.builtin.package:
    name: "{{ opengist_requirements }}"
    state: present
  when:
    - opengist_requirements | default([]) | count > 0

- name: merge opengist configuration between defaults and custom
  ansible.builtin.set_fact:
    opengist_service: "{{ opengist_defaults_service | combine(opengist_service, recursive=True) }}"
    opengist_tls_server: "{{ opengist_defaults_tls_server | combine(opengist_tls_server, recursive=True) }}"
    opengist_http_server: "{{ opengist_defaults_http_server | combine(opengist_http_server, recursive=True) }}"
    opengist_basic_auth_users: "{{ opengist_defaults_basic_auth_users | combine(opengist_basic_auth_users, recursive=True) }}"
    opengist_collectors: "{{ opengist_defaults_collectors | combine(opengist_collectors, recursive=True) }}"

...
