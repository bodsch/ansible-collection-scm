{% set values = forgejo_repository | bodsch.core.remove_empty_values %}
{% set _ = values.pop("editor") %}
{% set _ = values.pop("local") %}
{% set _ = values.pop("upload") %}
{% set _ = values.pop("pull_request") %}
{% set _ = values.pop("issue") %}
{% set _ = values.pop("release") %}
{% set _ = values.pop("signing") %}
{% if values.mimetype_mapping is defined %}
  {% set _ = values.pop("mimetype_mapping") %}
{% endif %}
{% if values | count > 0 %}

[repository]
  {% if values.root | default('') | string | length > 0 %}
ROOT = {{ values.root }}
  {% endif %}
  {% if values.script_type | default('') | string | length > 0 %}
SCRIPT_TYPE = {{ values.script_type }}
  {% endif %}
  {% if values.detected_charsets_order | default([]) | count > 0 %}
DETECTED_CHARSETS_ORDER = {{ values.detected_charsets_order | join(', ') }}
  {% endif %}
  {% if values.ansi_charset | default('') | string | length > 0 %}
ANSI_CHARSET = {{ values.ansi_charset }}
  {% endif %}
  {% if values.force_private | default('') | string | length > 0 %}
FORCE_PRIVATE = {{ values.force_private | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if values.default_private | default('') | string | length > 0 and
        values.default_private in ["last", "private", "public"] %}
DEFAULT_PRIVATE = {{ values.default_private }}
  {% endif %}
  {% if values.default_push_create_private | default('') | string | length > 0 %}
DEFAULT_PUSH_CREATE_PRIVATE = {{ values.default_push_create_private | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if values.max_creation_limit | default('') | string | length > 0 %}
MAX_CREATION_LIMIT = {{ values.max_creation_limit }}
  {% endif %}
  {% if values.mirror_queue_length | default('') | string | length > 0 %}
;; (DEPRECATED: please use [queue.mirror] LENGTH instead)
MIRROR_QUEUE_LENGTH = {{ values.mirror_queue_length }}
  {% endif %}
  {% if values.pull_request_queue_length | default('') | string | length > 0 %}
;; (DEPRECATED: please use [queue.pr_patch_checker] LENGTH instead)
PULL_REQUEST_QUEUE_LENGTH = {{ values.pull_request_queue_length }}
  {% endif %}
  {% if values.preferred_licenses | default([])| count > 0 %}
PREFERRED_LICENSES = {{ values.preferred_licenses | join (', ') }}
  {% endif %}
  {% if values.disable_http_git | default('') | string | length > 0 %}
DISABLE_HTTP_GIT = {{ values.disable_http_git | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if values.access_control_allow_origin | default('') | string | length > 0 %}
ACCESS_CONTROL_ALLOW_ORIGIN = {{ values.access_control_allow_origin }}
  {% endif %}
  {% if values.use_compat_ssh_uri | default('') | string | length > 0 %}
USE_COMPAT_SSH_URI = {{ values.use_compat_ssh_uri | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if values.go_get_clone_url_protocol | default('') | string | length > 0 %}
GO_GET_CLONE_URL_PROTOCOL = {{ values.go_get_clone_url_protocol }}
  {% endif %}
  {# ------------------------------------------------------------------------- #}
  {% if forgejo_version is version_compare('1.21.11', '>=') %}
    {% if values.default_close_issues_via_commits_in_any_branch | default('') | string | length > 0 %}
DEFAULT_CLOSE_ISSUES_VIA_COMMITS_IN_ANY_BRANCH = {{ values.default_close_issues_via_commits_in_any_branch | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if values.enable_push_create_user | default('') | string | length > 0 %}
ENABLE_PUSH_CREATE_USER = {{ values.enable_push_create_user | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if values.enable_push_create_org | default('') | string | length > 0 %}
ENABLE_PUSH_CREATE_ORG = {{ values.enable_push_create_org | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
  {% endif %}
  {# ------------------------------------------------------------------------- #}
  {% if values.disabled_repo_units | default([]) | count > 0 %}
  {#
      TODO
      allowed values: repo.issues, repo.ext_issues, repo.pulls, repo.wiki, repo.ext_wiki, repo.projects, repo.packages, repo.actions.
  #}
DISABLED_REPO_UNITS = {{ values.disabled_repo_units | join(', ') }}
  {% endif %}
  {% if values.default_repo_units | default([]) | count > 0 %}
  {#
      TODO
      allowed values: repo.code, repo.releases, repo.issues, repo.pulls, repo.wiki, repo.projects, repo.packages, repo.actions.
  #}
DEFAULT_REPO_UNITS = {{ values.default_repo_units | join(', ') }}
  {% endif %}
  {% if values.default_fork_repo_units | default([]) | count > 0 %}
  {#
      TODO
      the set of allowed values and rules are the same as DEFAULT_REPO_UNITS.
  #}
DEFAULT_FORK_REPO_UNITS = {{ values.default_fork_repo_units | join(', ') }}
  {% endif %}
  {% if values.prefix_archive_files | default('') | string | length > 0 %}
PREFIX_ARCHIVE_FILES = {{ values.prefix_archive_files | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if values.disable_migrations | default('') | string | length > 0 %}
DISABLE_MIGRATIONS = {{ values.disable_migrations | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if values.disable_stars | default('') | string | length > 0 %}
DISABLE_STARS = {{ values.disable_stars | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {# ------------------------------------------------------------------------- #}
  {% if forgejo_version is version_compare('1.21.11', '>=') %}
    {% if values.disable_forks | default('') | string | length > 0 %}
DISABLE_FORKS = {{ values.disable_forks | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
  {% endif %}
  {# ------------------------------------------------------------------------- #}
  {% if values.default_branch | default('') | string | length > 0 %}
DEFAULT_BRANCH = {{ values.default_branch }}
  {% endif %}
  {% if values.allow_adoption_of_unadopted_repositories | default('') | string | length > 0 %}
ALLOW_ADOPTION_OF_UNADOPTED_REPOSITORIES = {{ values.allow_adoption_of_unadopted_repositories | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if values.allow_deletion_of_unadopted_repositories | default('') | string | length > 0 %}
ALLOW_DELETION_OF_UNADOPTED_REPOSITORIES = {{ values.allow_deletion_of_unadopted_repositories | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if values.disable_download_source_archives | default('') | string | length > 0 %}
DISABLE_DOWNLOAD_SOURCE_ARCHIVES = {{ values.disable_download_source_archives | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if values.allow_fork_without_maximum_limit | default('') | string | length > 0 %}
ALLOW_FORK_WITHOUT_MAXIMUM_LIMIT = {{ values.allow_fork_without_maximum_limit | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
{% endif %}
{# ------------------------------------------------------------------------- #}
{# [repository.editor] #}
{% set values = forgejo_repository.editor | bodsch.core.remove_empty_values %}
{% if values | count > 0 %}

[repository.editor]
  {% if values.line_wrap_extensions | default([]) | count > 0 %}
LINE_WRAP_EXTENSIONS = {{ values.line_wrap_extensions | join(', ') }}
  {% endif %}
{% endif %}
{# ------------------------------------------------------------------------- #}
{# [repository.local] #}
{% set values = forgejo_repository.local | bodsch.core.remove_empty_values %}
{% if values | count > 0 %}

[repository.local]
    {% if values.local_copy_path | default('') | string | length > 0 %}
LOCAL_COPY_PATH = {{ values.local_copy_path }}
    {% endif %}
{% endif %}
{# ------------------------------------------------------------------------- #}
{# [repository.upload] #}
{% set values = forgejo_repository.upload | bodsch.core.remove_empty_values %}
{% if values | count > 0 and
      values.enabled | bool  %}

[repository.upload]
ENABLED = {{ values.enabled | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% if values.temp_path | default('') | string | length > 0 %}
TEMP_PATH = {{ values.temp_path }}
    {% endif %}
    {% if values.allowed_types | count > 0 %}
ALLOWED_TYPES = {{ values.allowed_types | join(', ') }}
    {% endif %}
    {% if values.file_max_size | default('') | string | length > 0 %}
FILE_MAX_SIZE = {{ values.file_max_size }}
    {% endif %}
    {% if values.max_files | default('') | string | length > 0 %}
MAX_FILES = {{ values.max_files }}
    {% endif %}
{% endif %}
{# ------------------------------------------------------------------------- #}
{# [repository.pull-request] #}
{% set values = forgejo_repository.pull_request | bodsch.core.remove_empty_values %}
{% if values | count > 0 %}

[repository.pull-request]
    {% if values.work_in_progress_prefixes | default([]) | count > 0 %}
WORK_IN_PROGRESS_PREFIXES = {{ values.work_in_progress_prefixes | join(', ') }}
    {% endif %}
    {% if values.close_keywords | default([]) | count > 0 %}
CLOSE_KEYWORDS = {{ values.close_keywords | join(', ') }}
    {% endif %}
    {% if values.reopen_keywords | default([]) | count > 0 %}
REOPEN_KEYWORDS = {{ values.reopen_keywords | join(', ') }}
    {% endif %}
    {% if values.default_merge_style | default('') | string | length > 0 and
          values.default_merge_style in ["merge", "rebase", "rebase-merge", "squash"] %}
DEFAULT_MERGE_STYLE = {{ values.default_merge_style }}
    {% endif %}
    {% if values.default_merge_message_commits_limit | default('') | string | length > 0 %}
DEFAULT_MERGE_MESSAGE_COMMITS_LIMIT = {{ values.default_merge_message_commits_limit }}
    {% endif %}
    {% if values.default_merge_message_size | default('') | string | length > 0 %}
DEFAULT_MERGE_MESSAGE_SIZE = {{ values.default_merge_message_size }}
    {% endif %}
    {% if values.default_merge_message_all_authors | default('') | string | length > 0 %}
DEFAULT_MERGE_MESSAGE_ALL_AUTHORS = {{ values.default_merge_message_all_authors | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if values.default_merge_message_max_approvers | default('') | string | length > 0 %}
DEFAULT_MERGE_MESSAGE_MAX_APPROVERS = {{ values.default_merge_message_max_approvers }}
    {% endif %}
    {% if values.default_merge_message_official_approvers_only | default('') | string | length > 0 %}
DEFAULT_MERGE_MESSAGE_OFFICIAL_APPROVERS_ONLY = {{ values.default_merge_message_official_approvers_only | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {# ------------------------------------------------------------------------- #}
    {% if forgejo_version is version_compare('1.21.11', '>=') %}
      {% if values.populate_squash_comment_with_commit_messages | default('') | string | length > 0 %}
POPULATE_SQUASH_COMMENT_WITH_COMMIT_MESSAGES = {{ values.populate_squash_comment_with_commit_messages | bodsch.core.config_bool(true_as='true', false_as='false') }}
      {% endif %}
      {% if values.retarget_children_on_merge | default('') | string | length > 0 %}
RETARGET_CHILDREN_ON_MERGE = {{ values.retarget_children_on_merge | bodsch.core.config_bool(true_as='true', false_as='false') }}
      {% endif %}
    {% endif %}
    {# ------------------------------------------------------------------------- #}
    {% if values.add_co_committer_trailers | default('') | string | length > 0 %}
ADD_CO_COMMITTER_TRAILERS = {{ values.add_co_committer_trailers | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if values.test_conflicting_patches_with_git_apply | default('') | string | length > 0 %}
TEST_CONFLICTING_PATCHES_WITH_GIT_APPLY = {{ values.test_conflicting_patches_with_git_apply | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
{% endif %}
{# ------------------------------------------------------------------------- #}
{# [repository.issue] #}
{% set values = forgejo_repository.issue | bodsch.core.remove_empty_values %}
{% if values | count > 0 %}

[repository.issue]
  {% if values.lock_reasons | count > 0 %}
LOCK_REASONS = {{ values.lock_reasons | join(', ') }}
  {% endif %}
{% endif %}
{# ------------------------------------------------------------------------- #}
{# [repository.release] #}
{% set values = forgejo_repository.release | bodsch.core.remove_empty_values %}
{% if values | count > 0 %}

[repository.release]
  {% if values.allowed_types | count > 0 %}
ALLOWED_TYPES = {{ values.allowed_types | join(', ') }}
  {% endif %}
  {% if values.default_paging_num | default('') | string | length > 0 %}
DEFAULT_PAGING_NUM = {{ values.default_paging_num }}
  {% endif %}
{% endif %}
{# ------------------------------------------------------------------------- #}
{# [repository.signing] #}
{% set values = forgejo_repository.signing | bodsch.core.remove_empty_values %}
{% if values | count > 0 %}

[repository.signing]
    {% if values.signing_key | default('') | string | length > 0 %}
SIGNING_KEY = {{ values.signing_key }}
    {% else %}
      {% if values.signing_name | default('') | string | length > 0 %}
SIGNING_NAME = {{ values.signing_name }}
      {% endif %}
      {% if values.signing_email | default('') | string | length > 0 %}
SIGNING_EMAIL = {{ values.signing_email }}
      {% endif %}
    {% endif %}
    {% if values.default_trust_model | default('') | string | length > 0 and
          values.default_trust_model in ["collaborator", "committer", "collaboratorcommitter"] %}
DEFAULT_TRUST_MODEL = {{ values.default_trust_model }}
    {% endif %}
    {% if values.initial_commit | count > 0 %}
      {% set valid_comit = ["never", "pubkey", "twofa", "always"] %}
      {% set valid_comit = values.initial_commit | bodsch.core.compare_list(compare_to_list=valid_comit) %}
INITIAL_COMMIT = {{ valid_comit | join(', ') }}
    {% endif %}
    {% if values.crud_actions | default('') | string | length > 0 %}
      {% set valid_actions = ["never", "pubkey", "twofa", "always", "parentsigned"] %}
      {% set valid_actions = values.crud_actions | bodsch.core.compare_list(compare_to_list=valid_actions) %}
CRUD_ACTIONS = {{ valid_actions | join(', ') }}
    {% endif %}
    {% if values.wiki | count > 0 %}
      {% set valid_wiki = ["never", "pubkey", "twofa", "always"] %}
      {% set valid_wiki = values.wiki | bodsch.core.compare_list(compare_to_list=valid_wiki) %}
WIKI = {{ valid_wiki | join(', ') }}
    {% endif  %}
    {% if forgejo_repository.signing.merges | count > 0 %}
      {% set valid_merges = ["never", "pubkey", "twofa", "always", "basesigned", "commitssigned", "approved"] %}
      {% set valid_merges = forgejo_repository.signing.merges | bodsch.core.compare_list(compare_to_list=valid_merges) %}
MERGES = {{ valid_merges | join(', ') }}
    {% endif %}
{% endif %}
{# ------------------------------------------------------------------------- #}
{# [repository.mimetype_mapping] #}
{% set values = forgejo_repository.mimetype_mapping | bodsch.core.remove_empty_values %}
{% if values | count > 0 %}

[repository.mimetype_mapping]
  {% for k, v in forgejo_repository.mimetype_mapping.items() %}
{{ k }} = {{ v }}
  {% endfor %}
{% endif %}
{# ------------------------------------------------------------------------- #}




{# ------------------------------------------------------------------------- #}
